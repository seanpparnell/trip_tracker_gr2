{"ast":null,"code":"var _jsxFileName = \"/Users/prestonbrinkerhoff/Desktop/dpl_spring22/trip_tracker_gr2/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport UserForm from './components/users/UserForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    axios.get('api/users').then(res => {\n      setUsers(res.data);\n    }).catch(err => console.log(err));\n  }, []);\n\n  const addUser = user => {\n    axios.post('/api/users', {\n      user\n    }).then(res => {\n      setUsers([...users, res.data]);\n    }).catch(err => console.log(err));\n  };\n\n  const updateUser = (id, user) => {\n    axios.put(`/api/users/${id}`, {\n      user\n    }).then(res => {\n      const newUpdatedUsers = users.map(u => {\n        if (u.id === id) {\n          return res.data;\n        }\n\n        return u;\n      });\n      setUsers(newUpdatedUsers);\n    }).catch(err => console.log(err));\n  };\n\n  const deleteUser = id => {\n    axios.delete(`/api/users/${id}`).then(res => {\n      setUsers(users.filter(u => u.id !== id));\n      alert(res.data.message);\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/prestonbrinkerhoff/Desktop/dpl_spring22/trip_tracker_gr2/client/src/App.js"],"names":["useState","useEffect","axios","UserForm","App","users","setUsers","get","then","res","data","catch","err","console","log","addUser","user","post","updateUser","id","put","newUpdatedUsers","map","u","deleteUser","delete","filter","alert","message"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,6BAArB;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAE,MAAM;AACfC,IAAAA,KAAK,CAACK,GAAN,CAAU,WAAV,EACGC,IADH,CACSC,GAAG,IAAI;AACZH,MAAAA,QAAQ,CAACG,GAAG,CAACC,IAAL,CAAR;AACD,KAHH,EAIGC,KAJH,CAIUC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAJjB;AAKC,GANM,EAMJ,EANI,CAAT;;AAQE,QAAMG,OAAO,GAAIC,IAAD,IAAU;AACxBd,IAAAA,KAAK,CAACe,IAAN,CAAW,YAAX,EAAyB;AAAED,MAAAA;AAAF,KAAzB,EACCR,IADD,CACOC,GAAG,IAAI;AACZH,MAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWI,GAAG,CAACC,IAAf,CAAD,CAAR;AACD,KAHD,EAICC,KAJD,CAIQC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAJf;AAKD,GAND;;AAOA,QAAMM,UAAU,GAAG,CAACC,EAAD,EAAKH,IAAL,KAAc;AAC/Bd,IAAAA,KAAK,CAACkB,GAAN,CAAW,cAAaD,EAAG,EAA3B,EAA8B;AAAEH,MAAAA;AAAF,KAA9B,EACCR,IADD,CACOC,GAAG,IAAI;AACZ,YAAMY,eAAe,GAAGhB,KAAK,CAACiB,GAAN,CAAWC,CAAC,IAAI;AACtC,YAAIA,CAAC,CAACJ,EAAF,KAASA,EAAb,EAAiB;AACf,iBAAOV,GAAG,CAACC,IAAX;AACD;;AACD,eAAOa,CAAP;AACD,OALuB,CAAxB;AAMAjB,MAAAA,QAAQ,CAACe,eAAD,CAAR;AACD,KATD,EAUCV,KAVD,CAUQC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAVf;AAWD,GAZD;;AAcA,QAAMY,UAAU,GAAIL,EAAD,IAAQ;AACzBjB,IAAAA,KAAK,CAACuB,MAAN,CAAc,cAAaN,EAAG,EAA9B,EACCX,IADD,CACOC,GAAG,IAAI;AACZH,MAAAA,QAAQ,CAACD,KAAK,CAACqB,MAAN,CAAcH,CAAC,IAAIA,CAAC,CAACJ,EAAF,KAASA,EAA5B,CAAD,CAAR;AACAQ,MAAAA,KAAK,CAAClB,GAAG,CAACC,IAAJ,CAASkB,OAAV,CAAL;AACD,KAJD,EAKCjB,KALD,CAKQC,GAAG,IAAGC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CALd;AAMD,GAPD;;AASF,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADF;AAOD,CAhDD;;GAAMR,G;;KAAAA,G;AAiDN,eAAeA,GAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport axios from \"axios\";\nimport UserForm from './components/users/UserForm';\n\nconst App = () => {\n  const [users, setUsers] = useState([])\n\n  useEffect( () => {\n    axios.get('api/users')\n      .then( res => {\n        setUsers(res.data)\n      })\n      .catch( err => console.log(err) )\n    }, [])\n\n    const addUser = (user) => {\n      axios.post('/api/users', { user })\n      .then( res => {\n        setUsers([...users, res.data ])\n      })\n      .catch( err => console.log(err) )\n    }\n    const updateUser = (id, user) => {\n      axios.put(`/api/users/${id}`, { user })\n      .then( res => {\n        const newUpdatedUsers = users.map( u => {\n          if (u.id === id) {\n            return res.data\n          }\n          return u\n        })\n        setUsers(newUpdatedUsers)\n      })\n      .catch( err => console.log(err) )\n    }\n\n    const deleteUser = (id) => {\n      axios.delete(`/api/users/${id}`)\n      .then( res => {\n        setUsers(users.filter( u => u.id !== id ))\n        alert(res.data.message)\n      })\n      .catch( err =>console.log(err) )\n    }\n\n  return(\n    <>\n      <h1>Users</h1>\n        <UserForm />\n  \n    </>\n  )\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}